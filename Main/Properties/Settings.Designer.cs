//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.1
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Main.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1280, 800")]
        public global::Microsoft.Xna.Framework.Point FullscreenResolution {
            get {
                return ((global::Microsoft.Xna.Framework.Point)(this["FullscreenResolution"]));
            }
            set {
                this["FullscreenResolution"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("800, 600")]
        public global::Microsoft.Xna.Framework.Point WindowResolution {
            get {
                return ((global::Microsoft.Xna.Framework.Point)(this["WindowResolution"]));
            }
            set {
                this["WindowResolution"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Heightmaps/Heightmap1")]
        public string Heightmap {
            get {
                return ((string)(this["Heightmap"]));
            }
            set {
                this["Heightmap"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("30")]
        public float Bumpiness {
            get {
                return ((float)(this["Bumpiness"]));
            }
            set {
                this["Bumpiness"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Textures/Rock")]
        public string Texture {
            get {
                return ((string)(this["Texture"]));
            }
            set {
                this["Texture"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool FrustumCullingEnabled {
            get {
                return ((bool)(this["FrustumCullingEnabled"]));
            }
            set {
                this["FrustumCullingEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool HeightmapEnabled {
            get {
                return ((bool)(this["HeightmapEnabled"]));
            }
            set {
                this["HeightmapEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool TextureEnabled {
            get {
                return ((bool)(this["TextureEnabled"]));
            }
            set {
                this["TextureEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool LightEnabled {
            get {
                return ((bool)(this["LightEnabled"]));
            }
            set {
                this["LightEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1, -1, 0")]
        public global::Microsoft.Xna.Framework.Vector3 LightDirection {
            get {
                return ((global::Microsoft.Xna.Framework.Vector3)(this["LightDirection"]));
            }
            set {
                this["LightDirection"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1, 1, 1")]
        public global::Microsoft.Xna.Framework.Vector3 LightDiffuse {
            get {
                return ((global::Microsoft.Xna.Framework.Vector3)(this["LightDiffuse"]));
            }
            set {
                this["LightDiffuse"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0.2, 0.2, 0.2")]
        public global::Microsoft.Xna.Framework.Vector3 LightAmbient {
            get {
                return ((global::Microsoft.Xna.Framework.Vector3)(this["LightAmbient"]));
            }
            set {
                this["LightAmbient"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("8")]
        public float Quality {
            get {
                return ((float)(this["Quality"]));
            }
            set {
                this["Quality"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool BruteForceEnabled {
            get {
                return ((bool)(this["BruteForceEnabled"]));
            }
            set {
                this["BruteForceEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0, 0, 0")]
        public global::Microsoft.Xna.Framework.Color BackgroundColor {
            get {
                return ((global::Microsoft.Xna.Framework.Color)(this["BackgroundColor"]));
            }
            set {
                this["BackgroundColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0, 0")]
        public global::Microsoft.Xna.Framework.Vector3 LightSpecular {
            get {
                return ((global::Microsoft.Xna.Framework.Vector3)(this["LightSpecular"]));
            }
            set {
                this["LightSpecular"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("5")]
        public float LightShininess {
            get {
                return ((float)(this["LightShininess"]));
            }
            set {
                this["LightShininess"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool GeomorphEnabled {
            get {
                return ((bool)(this["GeomorphEnabled"]));
            }
            set {
                this["GeomorphEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("200, 200, 200, 255")]
        public global::Microsoft.Xna.Framework.Color TerrainColor {
            get {
                return ((global::Microsoft.Xna.Framework.Color)(this["TerrainColor"]));
            }
            set {
                this["TerrainColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("32")]
        public float TextureResolution {
            get {
                return ((float)(this["TextureResolution"]));
            }
            set {
                this["TextureResolution"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("33")]
        public int BlockSize {
            get {
                return ((int)(this["BlockSize"]));
            }
            set {
                this["BlockSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Quadtree")]
        public global::Terrain.TerrainType Terrain {
            get {
                return ((global::Terrain.TerrainType)(this["Terrain"]));
            }
            set {
                this["Terrain"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("8")]
        public float MinQuality {
            get {
                return ((float)(this["MinQuality"]));
            }
            set {
                this["MinQuality"] = value;
            }
        }
    }
}
